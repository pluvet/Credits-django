"""
Django settings for proj project.

Generated by 'django-admin startproject' using Django 3.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path

from celery import Celery
from celery.schedules import crontab

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve(strict=True).parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '^z8%qvj&khr2ak*w9r#6(i0c#$9)#vy2!y3$%9c2cv0hh*z6f$'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'credit',
    'django_celery_beat'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'proj.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'proj.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
     'default': {

        'ENGINE': 'django.db.backends.postgresql_psycopg2',

        'NAME': 'credits',

        'USER': 'postgres',

        'PASSWORD': '123456',

        'HOST': 'localhost',

        'PORT': '5432',

    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

Celery_BEAT_SCHEDULE = {
    "scheduled_task": {
        "task": "credit.tasks.report",
        "schedule": crontab(minute='*/1')
    }
}
#celery celery -A proj  worker --loglevel=info
# flower flower -A proj --port=5555
# beat celery -A proj beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler


#   colas de trabajo RQ FASTAPI instalar poetry para dependencias
#   proyecto registrar usuarios en la API cuenta (nombre, correo, contrase√±a maluca) 
#   crear perfil al mismo tiempo que se crea la cuenta del usuario (id de cuenta,perfil foto descripcion biografia edad ciudad hobby) se crea al mismo tiempo con la cuenta
#   el perfil del usuario se crea de forma asincrona en RQ
#   cada vez que se crea un usuaario de forma asincrona se crea el perfil  
#   responde que la cuenta ya se creo
#
#   no voy a usar postgres voy a usar mongodb inserts en mongo un driver para mongo en fastapi
#   aprender queries de mongo
#
#   endpoint de crear cuentas y crear perfiles
#   endpoint para obtener los perfiles
#   endpoint para editar los perfiles    
#son 3 endpoints
#poetry

#  que los usuarios puedan editar su perfil

